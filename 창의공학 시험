1번 20점 / 2번 20점 / 3번 20점 / 4번 20점 / 5번 20점
1. 창의공학을 통해서 학생들이 학습해야할 내용에 대해 5가지를 적으시오.

(1) 아무래도 창의적인 아이디어를 가지고 있어야한다고 생각합니다.
   새로운 아이디어를 만들고 발전시켜 나가야하기 때문입니다.

(2) 두 번째로 협업과 팀워크가 있어야한다고 생각합니다.
   팀원들과 협력하고 의겨을 나누어 새로운 기회를 만들 수 있기 때문입니다.

(3) 세 번째로 소통 기술이 있어야 한다고 생각합니다,
   자신이 만든 아이디어를 보다 정확하게 전달해야지 
   서로의 의견을 이해하는 능력을 향상시키기 때문이다.

(4) 네 번째로 문제 기반 학습 프로젝트를 해야한다고 생각합니다.
   경험해 본 것과 그냥 쳐다 보기만 한 것은 다르기 때문입니다.

(5) 다섯 번째로 미래 기술에 대해 연구해야한다고 생각합니다.
   현재에 머물러 있기 보다는 점차 나아가야 하기 때문에 미래 기술에 대해
   생각해보고 연구해야한다고 생각합니다.

2. 스마트폰으로 집의 전등을 켜고 끄는 시스템을 설계하고 제작하는 과정을 유무선 통신을 포함한 과정을 자세히 설명하시오.
(1) 스마트폰과 무선 통신 모듈을 연결하여 마이크로컨트롤러와 릴레이 모듈을 연결하는 회로를 설계해야 합니다.
     이 회로는 전원 및 제어 신호를 릴레이에 전달할 수 있도록 해야합니다.

(2) 스마트폰에서 전등을 제어할 수 있도록 만들고, 스마트 폰을 앱이나 웹 앱을 개발하여무선 통신 모듈을 통해
     제어 명령을 전송할 수 있어야 합니다.

(3) 무선 통신 모듈을 스마트폰과 페어링 한다음 네트워크에 연결합니다. wifi를 사용한다면 무선 라우터에 연결하고
     Bluetooth를 사용한다면 스마트폰과 무선 통신 모듈을 페어링합니다.

(4) 전원과 소켓을 릴레이 모듈에 연결한 다음, 릴레이를 통해 전원을 전달해주어야 합니다. 전기 연결은 안전을 위해
     주의 깊게 처리해야 됩니다.

(5) 시스템을 테스트해보아 원격으로 전등을 켜고 끌 수 있는지 확인한 다음에 안전성을 점검합니다. 그 다음
     시스템을 정상적으로 사용할 수 있게 됩니다.

3. 문제 : 아두이노의 스위치를 읽고 서버로 1초에 1회씩 전송하는 코드와 서버에서 수신하여 1이면 초록색, 2이면 검은색으로 바꾸는 코드를 적으시오.
아두이노 코드 :
void setup() {
  pinMode(11, INPUT_PULLUP);
  Serial.begin(9600);
}
void loop() {
  int sw=digitalRead(11);
  Serial.println(sw+1);
  delay(1000);
}

프로세싱 코드:
import processing.serial.*;
Serial p;
void setup(){
  p = new Serial(this, "COM11", 9600);
}
String m="";
void draw(){
  if(p.available()>0){
    m = p.readStringUntil('\n');
    if(m!=null){
      print(m);
      if(m.indexOf('1')==0) background(0,255,0);
      if(m.indexOf('2')==0) background(0,0,0);
    }
  }
}

4. 서버에서 스마트폰으로 1을 보내면 스마트폰의 화면이 푸른색으로, 0을 보내면 붉은 색으로 보낸느 코드를 적으시오.
   앱 인벤터의 컴포넌트와 내용을 적으시오.

아두이노 코드:
void setup() {
  pinMode(11, INPUT_PULLUP);
  Serial.begin(9600);
}
void loop() {
  int sw=digitalRead(11);
  Serial.println(sw);
  delay(1000);
}

프로세싱 코드:
import processing.serial.*;
import processing.net.*;
Serial p;
Server s;
Client c;
void setup(){
  p = new Serial(this, "COM11", 9600);
  s = new Server(this, 123);
}
String m="";
void draw(){
  if(p.available()>0){
    m = p.readStringUntil('\n');
    if(m!=null){
      print(m);
    }
  }
  c = s.available();
  if(c!=null){
    String w = c.readString();
    println(w);
    if (w.indexOf("GET")==0) {
      c.write("HTTP/1.1 200 OK\r\n\r\n\r\n");
      c.write(m);
    }
    c.stop();
  }
}


5. 스마트폰에서 on 버튼을 누르면 서버를 거쳐 아두이노의 7번 핀의 LED 켜지고, OFF 버튼을 누르면 7번 핀의 LED가 꺼진다.
   스마트폰의 텍스트 박스에 숫자 1부터 8 중에 하나를 넣고, Send 버튼을 누르면 아두이노의 4번 핀에 달린 피에조 스피커가 도,레~시,도 가
   작동 되도록 하시오.

아두이노 코드:
void setup() {
  Serial.begin(9600);
  pinMode(7, OUTPUT);
}
void loop() {
  
  String values[] = {"1", "2", "3", "4", "5", "6", "7", "8"};

  if (Serial.available() > 0) {
    
    String m = Serial.readStringUntil('\n');
        if (m == "on") {
      digitalWrite(7, HIGH);
    } else if (m == "off") {
      digitalWrite(7, LOW);
    } else {
      int frequency = 0;
      // 문자열을 정수로 변환하여 주파수 설정
      int value = m.toInt();
      switch (value) {
        case 1:
          frequency = 261; // 도
          break;
        case 2:
          frequency = 293; // 레
          break;
        case 3:
          frequency = 329; // 미
          break;
        case 4:
          frequency = 349; // 파
          break;
        case 5:
          frequency = 392; // 솔
          break;
        case 6:
          frequency = 440; // 라
          break;
        case 7:
          frequency = 493; // 시
          break;
        case 8:
          frequency = 523; // 높은 도
          break;
        default:
          // 유효하지 않은 입력 처리
          break;
      }

      if (frequency > 0) {
        tone(4, frequency, 500); // 주파수 설정
      }
    }

프로세싱 코드:
import processing.net.*;
import processing.serial.*;
Server s;
Client c;
Serial p;
void setup() {
  s = new Server(this, 123);
  p = new Serial(this, "COM11", 9600);
}
String msg="hi";
void draw() {
  c = s.available();
  if (c!=null) {
    
    String m = c.readString();
    if (m.indexOf("GET /")==0) {
      c.write("HTTP/1.1 200 OK\r\n\r\n");
      c.write(msg);
    }
    if (m.indexOf("PUT /")==0) {
      int n = m.indexOf("\r\n\r\n")+4; // on-off 위치
      m = m.substring(n); // on-off 잘라 내는 위치   //
      m += '\n';           // 표시할 문자
      p.write(m); // 시리얼 포트로 on-off 보내기 
      print(m);
    }
  }
  if (p.available()>0) { // 시리얼 데이터 읽기
    String m = p.readStringUntil('\n');
    if (m!=null)  msg = m;
    print(msg);
  }
}
